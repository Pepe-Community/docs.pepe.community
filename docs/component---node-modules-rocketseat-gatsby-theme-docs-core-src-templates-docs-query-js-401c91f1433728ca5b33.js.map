{"version":3,"sources":["webpack://gatsby-starter-rocket-docs/./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack://gatsby-starter-rocket-docs/./node_modules/@babel/runtime/helpers/construct.js","webpack://gatsby-starter-rocket-docs/./node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js","webpack://gatsby-starter-rocket-docs/./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack://gatsby-starter-rocket-docs/./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack://gatsby-starter-rocket-docs/./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack://gatsby-starter-rocket-docs/./src/@rocketseat/gatsby-theme-docs/components/Docs/EditGithub.js","webpack://gatsby-starter-rocket-docs/./src/@rocketseat/gatsby-theme-docs/components/Docs/index.js","webpack://gatsby-starter-rocket-docs/./node_modules/@rocketseat/gatsby-theme-docs-core/src/templates/docs-query.js","webpack://gatsby-starter-rocket-docs/./node_modules/@rocketseat/gatsby-theme-docs/src/@rocketseat/gatsby-theme-docs-core/components/Docs.js","webpack://gatsby-starter-rocket-docs/./node_modules/gatsby-plugin-mdx/index.js","webpack://gatsby-starter-rocket-docs/./node_modules/gatsby-plugin-mdx/mdx-renderer.js"],"names":["arrayLikeToArray","module","exports","arr","Array","isArray","__esModule","setPrototypeOf","isNativeReflectConstruct","_construct","Parent","args","Class","Reflect","construct","a","push","apply","instance","Function","bind","prototype","arguments","sham","Proxy","Boolean","valueOf","call","e","iter","Symbol","iterator","from","TypeError","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","EditGithub","repositoryEditUrl","repositoryProvider","theme","useTheme","href","target","rel","css","colors","text","style","marginRight","Docs","mdx","pageContext","prev","next","frontmatter","title","description","image","disableTableOfContents","headings","body","slug","fields","SEO","Layout","MDXRenderer","defaultProps","data","require","React","useMDXScope","scope","children","props","mdxScope","End","fullScope","keys","Object","values","key","fn"],"mappings":"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","file":"component---node-modules-rocketseat-gatsby-theme-docs-core-src-templates-docs-query-js-401c91f1433728ca5b33.js","sourcesContent":["var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\n\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct.js\");\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct;\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nmodule.exports = _construct;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nmodule.exports = _isNativeReflectConstruct;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\n\nvar iterableToArray = require(\"./iterableToArray.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","/* @jsx jsx */\nimport { useTheme, jsx, css } from '@emotion/react';\nimport PropTypes from 'prop-types';\nimport { MdEdit } from 'react-icons/md';\n\nexport default function EditGithub({ repositoryEditUrl, repositoryProvider }) {\n    const theme = useTheme();\n\n    if (repositoryEditUrl) {\n        return (\n            <a\n                href={repositoryEditUrl}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                css={css`\n          display: flex;\n          align-items: center;\n          text-decoration: none;\n          margin-top: 48px;\n          color: ${theme.colors.text};\n          opacity: 0.8;\n          font-size: 14px;\n          font-weight: normal;\n        `}\n            >\n                <MdEdit style={{ marginRight: '5px' }} />\n                Edit this page on {repositoryProvider}\n            </a>\n        );\n    }\n    return null;\n}\n\nEditGithub.propTypes = {\n    repositoryEditUrl: PropTypes.string,\n    repositoryProvider: PropTypes.string,\n};\n\nEditGithub.defaultProps = {\n    repositoryEditUrl: null,\n    repositoryProvider: null,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MDXRenderer } from 'gatsby-plugin-mdx';\n\nimport Layout from '../Layout';\nimport SEO from '../SEO';\n// import PostNav from './PostNav';\nimport EditGithub from './EditGithub';\n\nexport default function Docs({ mdx, pageContext }) {\n    const { prev, next, repositoryEditUrl, repositoryProvider } = pageContext;\n    const { title, description, image, disableTableOfContents } = mdx.frontmatter;\n    const { headings, body } = mdx;\n    const { slug } = mdx.fields;\n\n    return (\n        <>\n            <SEO title={title} description={description} slug={slug} image={image} />\n            <Layout\n                disableTableOfContents={disableTableOfContents}\n                title={title}\n                headings={headings}\n            >\n                <MDXRenderer>{body}</MDXRenderer>\n                <EditGithub\n                    repositoryEditUrl={repositoryEditUrl}\n                    repositoryProvider={repositoryProvider}\n                />\n                {/*<PostNav prev={prev} next={next} />*/}\n            </Layout>\n        </>\n    );\n}\n\nDocs.propTypes = {\n    mdx: PropTypes.shape({\n        body: PropTypes.string,\n        headings: PropTypes.array,\n        frontmatter: PropTypes.shape({\n            title: PropTypes.string,\n            description: PropTypes.string,\n            image: PropTypes.string,\n            disableTableOfContents: PropTypes.bool,\n        }),\n        fields: PropTypes.shape({\n            slug: PropTypes.string,\n        }),\n    }).isRequired,\n    pageContext: PropTypes.shape({\n        prev: PropTypes.shape({}),\n        next: PropTypes.shape({}),\n        repositoryEditUrl: PropTypes.string,\n        repositoryProvider: PropTypes.string,\n    }).isRequired,\n};\n","import { graphql } from 'gatsby';\nimport DocsComponent from '../components/Docs';\n\nexport default DocsComponent;\n\nexport const query = graphql`\n  query($slug: String!) {\n    mdx(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n        description\n        image\n        disableTableOfContents\n      }\n      body\n      headings {\n        depth\n        value\n      }\n    }\n  }\n`;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport Docs from '../../../components/Docs';\n\nexport default function Docspage({ data: { mdx }, pageContext }) {\n  return <Docs mdx={mdx} pageContext={pageContext} />;\n}\n","/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","const React = require(`react`)\nconst { mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  children,\n  ...props\n}) {\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, {...props })\n}\n"],"sourceRoot":""}